#!/usr/bin/env python
PACKAGE = "thor_mang_ros_control"
def generate(gen):
    min_offset = -0.5
    max_offset = 0.5
    #           Name            Type    Level Description         Default  Min   Max   
    gen.add("joint_1", double_t, 0, "R_SHOULDER_PITCH offset ", 0.0, min_offset, max_offset)
    gen.add("joint_3", double_t, 0, "R_SHOULDER_ROLL offset", 0.0, min_offset, max_offset)
    gen.add("joint_5", double_t, 0, "R_SHOULDER_YAW offset", 0.0, min_offset, max_offset)
    gen.add("joint_7", double_t, 0, "R_ELBOW offset", 0.0, min_offset, max_offset)
    gen.add("joint_9", double_t, 0, "R_WRIST_YAW1 offset", 0.0, min_offset, max_offset)
    gen.add("joint_11", double_t, 0, "R_WRIST_ROLL offset", 0.0, min_offset, max_offset)
    gen.add("joint_13", double_t, 0, "R_WRIST_YAW2 offset", 0.0, min_offset, max_offset)

    gen.add("joint_2", double_t, 0, "L_SHOULDER_PITCH offset ", 0.0, min_offset, max_offset)
    gen.add("joint_4", double_t, 0, "L_SHOULDER_ROLL offset", 0.0, min_offset, max_offset)
    gen.add("joint_6", double_t, 0, "L_SHOULDER_YAW offset", 0.0, min_offset, max_offset)
    gen.add("joint_8", double_t, 0, "L_ELBOW offset", 0.0, min_offset, max_offset)
    gen.add("joint_10", double_t, 0, "L_WRIST_YAW1 offset", 0.0, min_offset, max_offset)
    gen.add("joint_12", double_t, 0, "L_WRIST_ROLL offset", 0.0, min_offset, max_offset)
    gen.add("joint_14", double_t, 0, "L_WRIST_YAW2 offset", 0.0, min_offset, max_offset)


    gen.add("joint_15", double_t, 0, "R_HIP_YAW offset", 0.0, min_offset, max_offset)
    gen.add("joint_17", double_t, 0, "R_HIP_ROLL offset", 0.0, min_offset, max_offset)
    gen.add("joint_19", double_t, 0, "R_HIP_PITCH offset", 0.0, min_offset, max_offset)
    gen.add("joint_21", double_t, 0, "R_KNEE offset", 0.0, min_offset, max_offset)
    gen.add("joint_23", double_t, 0, "R_ANKLE_PITCH offset", 0.0, min_offset, max_offset)
    gen.add("joint_25", double_t, 0, "R_ANKLE_ROLL offset", 0.0, min_offset, max_offset)

    gen.add("joint_16", double_t, 0, "L_HIP_YAW offset", 0.0, min_offset, max_offset)
    gen.add("joint_18", double_t, 0, "L_HIP_ROLL offset", 0.0, min_offset, max_offset)
    gen.add("joint_20", double_t, 0, "L_HIP_PITCH offset", 0.0, min_offset, max_offset)
    gen.add("joint_22", double_t, 0, "L_KNEE offset", 0.0, min_offset, max_offset)
    gen.add("joint_24", double_t, 0, "L_ANKLE_PITCH offset", 0.0, min_offset, max_offset)
    gen.add("joint_26", double_t, 0, "L_ANKLE_ROLL offset", 0.0, min_offset, max_offset)

    gen.add("joint_27", double_t, 0, "WAIST_PAN offset", 0.0, min_offset, max_offset)
    gen.add("joint_28", double_t, 0, "WAIST_TILT offset", 0.0, min_offset, max_offset)

    gen.add("joint_29", double_t, 0, "HEAD_PAN offset", 0.0, min_offset, max_offset)
    gen.add("joint_30", double_t, 0, "HEAD_TILT offset", 0.0, min_offset, max_offset)

    gen.add("joint_31", double_t, 0, "R_HAND_THUMB offset", 0.0, min_offset, max_offset)  
    gen.add("joint_33", double_t, 0, "R_HAND_INDEX_FINGER offset", 0.0, min_offset, max_offset)
    gen.add("joint_35", double_t, 0, "R_HAND_MIDDLE_FINGER offset", 0.0, min_offset, max_offset)

    gen.add("joint_32", double_t, 0, "L_HAND_THUMB offset", 0.0, min_offset, max_offset)
    gen.add("joint_34", double_t, 0, "L_HAND_INDEX_FINGER offset", 0.0, min_offset, max_offset)    
    gen.add("joint_36", double_t, 0, "L_HAND_MIDDLE_FINGER offset", 0.0, min_offset, max_offset)

    gen.add("joint_37", double_t, 0, "WAIST_LIDAR offset", 0.0, min_offset, max_offset)

    exit(gen.generate(PACKAGE, "hardware_interface_config", "HardwareInterface"))

try:
    from dynamic_reconfigure.parameter_generator_catkin import *
    gen = ParameterGenerator()
    generate(gen)
# reason for catching IndexError
# parameter_generator_catkin expects 4 arguments while rosbuild only passes in 2
# not thrilled with this solution
except IndexError:
    print 'ERROR', PACKAGE, 'HardwareInterface.cfg failed using parameter_generator_catkin, using rosbuild instead'
    from dynamic_reconfigure.parameter_generator import *
    gen = ParameterGenerator()
    generate(gen)
