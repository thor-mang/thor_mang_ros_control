#!/usr/bin/env python
PACKAGE = "thor_mang_ros_control"
def generate(gen):
    min_offset = -0.5
    max_offset = 0.5
    #           Name            Type    Level Description         Default  Min   Max   
    gen.add("r_shoulder_pitch", double_t, 0, "R_SHOULDER_PITCH offset ", 0.0, min_offset, max_offset)
    gen.add("r_shoulder_roll", double_t, 0, "R_SHOULDER_ROLL offset", 0.08, min_offset, max_offset)
    gen.add("r_shoulder_yaw", double_t, 0, "R_SHOULDER_YAW offset", 0.0, min_offset, max_offset)
    gen.add("r_elbow", double_t, 0, "R_ELBOW offset", 0.0, min_offset, max_offset)
    gen.add("r_wrist_yaw1", double_t, 0, "R_WRIST_YAW1 offset", 0.0, min_offset, max_offset)
    gen.add("r_wrist_roll", double_t, 0, "R_WRIST_ROLL offset", 0.02, min_offset, max_offset)
    gen.add("r_wrist_yaw2", double_t, 0, "R_WRIST_YAW2 offset", 0.0, min_offset, max_offset)

    gen.add("l_shoulder_pitch", double_t, 0, "L_SHOULDER_PITCH offset ", 0.0, min_offset, max_offset)
    gen.add("l_shoulder_roll", double_t, 0, "L_SHOULDER_ROLL offset", -0.035, min_offset, max_offset)
    gen.add("l_shoulder_yaw", double_t, 0, "L_SHOULDER_YAW offset", 0.0, min_offset, max_offset)
    gen.add("l_elbow", double_t, 0, "L_ELBOW offset", 0.0, min_offset, max_offset)
    gen.add("l_wrist_yaw1", double_t, 0, "L_WRIST_YAW1 offset", 0.0, min_offset, max_offset)
    gen.add("l_wrist_roll", double_t, 0, "L_WRIST_ROLL offset", 0.0, min_offset, max_offset)
    gen.add("l_wrist_yaw2", double_t, 0, "L_WRIST_YAW2 offset", 0.0, min_offset, max_offset)


    gen.add("r_hip_yaw", double_t, 0, "R_HIP_YAW offset", 0.0, min_offset, max_offset)
    gen.add("r_hip_roll", double_t, 0, "R_HIP_ROLL offset", 0.0, min_offset, max_offset)
    gen.add("r_hip_pitch", double_t, 0, "R_HIP_PITCH offset", 0.0, min_offset, max_offset)
    gen.add("r_knee", double_t, 0, "R_KNEE offset", 0.0, min_offset, max_offset)
    gen.add("r_ankle_pitch", double_t, 0, "R_ANKLE_PITCH offset", 0.0, min_offset, max_offset)
    gen.add("r_ankle_roll", double_t, 0, "R_ANKLE_ROLL offset", 0.0, min_offset, max_offset)

    gen.add("l_hip_yaw", double_t, 0, "L_HIP_YAW offset", 0.0, min_offset, max_offset)
    gen.add("l_hip_roll", double_t, 0, "L_HIP_ROLL offset", 0.0, min_offset, max_offset)
    gen.add("l_hip_pitch", double_t, 0, "L_HIP_PITCH offset", 0.0, min_offset, max_offset)
    gen.add("l_knee", double_t, 0, "L_KNEE offset", 0.0, min_offset, max_offset)
    gen.add("l_ankle_pitch", double_t, 0, "L_ANKLE_PITCH offset", 0.0, min_offset, max_offset)
    gen.add("l_ankle_roll", double_t, 0, "L_ANKLE_ROLL offset", 0.0, min_offset, max_offset)

    gen.add("waist_pan", double_t, 0, "WAIST_PAN offset", 0.0, min_offset, max_offset)
    gen.add("waist_tilt", double_t, 0, "WAIST_TILT offset", 0.0, min_offset, max_offset)

    gen.add("head_pan", double_t, 0, "HEAD_PAN offset", 0.0, min_offset, max_offset)
    gen.add("head_tilt", double_t, 0, "HEAD_TILT offset", 0.0, min_offset, max_offset)

    gen.add("r_hand_thumb", double_t, 0, "R_HAND_THUMB offset", 0.0, min_offset, max_offset)  
    gen.add("r_hand_index_finger", double_t, 0, "R_HAND_INDEX_FINGER offset", 0.0, min_offset, max_offset)
    gen.add("r_hand_middle_finger", double_t, 0, "R_HAND_MIDDLE_FINGER offset", 0.0, min_offset, max_offset)

    gen.add("l_hand_thumb", double_t, 0, "L_HAND_THUMB offset", 0.0, min_offset, max_offset)
    gen.add("l_hand_index_finger", double_t, 0, "L_HAND_INDEX_FINGER offset", 0.0, min_offset, max_offset)    
    gen.add("l_hand_middle_finger", double_t, 0, "L_HAND_MIDDLE_FINGER offset", 0.0, min_offset, max_offset)

    gen.add("waist_lidar", double_t, 0, "WAIST_LIDAR offset", 0.0, min_offset, max_offset)

    exit(gen.generate(PACKAGE, "hardware_interface_config", "HardwareInterface"))

try:
    from dynamic_reconfigure.parameter_generator_catkin import *
    gen = ParameterGenerator()
    generate(gen)
# reason for catching IndexError
# parameter_generator_catkin expects 4 arguments while rosbuild only passes in 2
# not thrilled with this solution
except IndexError:
    print 'ERROR', PACKAGE, 'HardwareInterface.cfg failed using parameter_generator_catkin, using rosbuild instead'
    from dynamic_reconfigure.parameter_generator import *
    gen = ParameterGenerator()
    generate(gen)
