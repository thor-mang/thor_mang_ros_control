#!/usr/bin/env python
PACKAGE = "thor_mang_ros_control"


def generate(gen):
    jointList = ["r_shoulder_pitch",
                 "l_shoulder_pitch",
                 "r_shoulder_roll",
                 "l_shoulder_roll",
                 "r_shoulder_yaw",
                 "l_shoulder_yaw",
                 "r_elbow",
                 "l_elbow",
                 "r_wrist_yaw1",
                 "l_wrist_yaw1",
                 "r_wrist_roll",
                 "l_wrist_roll",
                 "r_wrist_yaw2",
                 "l_wrist_yaw2",
                 "r_hip_yaw",
                 "l_hip_yaw",
                 "r_hip_roll",
                 "l_hip_roll",
                 "r_hip_pitch",
                 "l_hip_pitch",
                 "r_knee",
                 "l_knee",
                 "r_ankle_pitch",
                 "l_ankle_pitch",
                 "r_ankle_roll",
                 "l_ankle_roll",
                 "waist_pan",
                 "waist_tilt",
                 "head_pan",
                 "head_tilt"]

    level = 0
    for i in range(len(jointList)):
        joint = jointList[i]
        jointID = i + 1
        joint_group = gen.add_group(joint)

        positionPGainDefault = 32
        velocityPGainDefault = 399
        if (jointID >= 15 and jointID <= 26):
            velocityIGainDefault = 0
        else:
            velocityIGainDefault = 14

        # Name                    Type      Level    Description               Default Min Max
        joint_group.add(joint + '_position_p_gain', int_t, 1 << level, "Position P Gain for " + joint, positionPGainDefault, 0, 65536)
        joint_group.add(joint + '_velocity_p_gain', int_t, 1 << level, "Velocity P Gain for " + joint, velocityPGainDefault, 0, 65536)
        joint_group.add(joint + '_velocity_i_gain', int_t, 1 << level, "Velocity I Gain for " + joint, velocityIGainDefault, 0, 65536)
        level += 1

    exit(gen.generate(PACKAGE, "servo_gains_config", "ServoGains"))


try:
    from dynamic_reconfigure.parameter_generator_catkin import *

    gen = ParameterGenerator()
    generate(gen)
# reason for catching IndexError
# parameter_generator_catkin expects 4 arguments while rosbuild only passes in 2
# not thrilled with this solution
except IndexError:
    print 'ERROR', PACKAGE, 'ServoGains.cfg failed using parameter_generator_catkin, using rosbuild instead'
    from dynamic_reconfigure.parameter_generator import *

    gen = ParameterGenerator()
    generate(gen)
